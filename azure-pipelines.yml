resources:
   containers:
   - container: fpkde
     options: '--privileged'
     image: mobsya/flatpak-builders:kde-latest

trigger:
  tags:
    include:
    - 2.*
  branches:
    include:
    - '*'

variables:
- group: passwords
- name: blockly_version
  value: "v20200506.1"
- name: scratch_version
  value: "v20201116.1"
- name: packet_version
  value: "2.1.5"
- name: blockly_url
  value: "https://github.com/Mobsya/thymio-blockly-standalone/releases/download/$(blockly_version)/thymio-blockly.tar.gz"
- name: scratch_url
  value: "https://github.com/Mobsya/scratch-gui/releases/download/$(scratch_version)/scratch-gui.tar.gz"
- name: vpl3_url
  value: "https://github.com/Mobsya/ci-data/releases/download/data/vpl3-thymio-suite-2020.tar.gz"
- name: vcpkg_commit
  value: "cccef600decd1091a20a0b4d8a2e61f7041eb686"
- name: visual_bootstrapper
  value: "https://github.com/Mobsya/ci-data/releases/download/data/vs_enterprise.exe"

jobs:

- job: BuildForIOs
  pool:
    vmImage: 'macOS-10.14'
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '9.x'

  - task: InstallAppleCertificate@2
    inputs:
      certSecureFile: 'certificat-IOS.p12'
      certPwd: $(mobsya-mac-p12)

  - task: InstallAppleProvisioningProfile@1
    inputs:
      provisioningProfileLocation: 'secureFiles'
      provProfileSecureFile: 'Ios2020dist.mobileprovision'
      removeProfile: true

  - script: |
      curl -sL $(blockly_url) | tar xzf - -C .
      curl -sL $(scratch_url) | tar xzf - -C .
      curl -sL $(vpl3_url) | tar xzf - -C .
    displayName: 'Extract scratch, blockly and vpl3'

    #we need 7z to extract qt so brew needs to run first
    #workaround until devops deploy
  - script: |
      brew uninstall openssl@1.0.2t
      brew untap local/openssl
      brew bundle
    displayName: 'Install dependencies with HomeBrew'

  - script: |
      curl -sL https://github.com/Mobsya/ci-data/releases/download/data/qt-5.15.2-ios.7z --output ios.7z
      7z x ios.7z
    displayName: 'Download Qt 5.15.2 for ios'

  - script: |
      git submodule update --init --recursive
    displayName: 'Clone submodules'

  - script: |
      sudo xcode-select -s /Applications/Xcode_11.3.1.app/Contents/Developer
      mkdir build && cd build;
      mkdir flatc && cd flatc;
      cmake ../../third_party/flatbuffers -GXcode
      cmake --build . --config Release --target flatc
      export FLATC=`pwd`/Release/flatc
      cd ..
      cmake -DIOS_ARCH="arm64" -DENABLE_BITCODE=NO -DIOS_DEPLOYMENT_TARGET=11.0 -DCMAKE_TOOLCHAIN_FILE=../ios/ios-cmake/ios.toolchain.cmake -DCMAKE_PREFIX_PATH="`pwd`/../Qt/5.15.2/ios/" -G Xcode -DIOS_ARCHIVE_BUILD=1 ..
    displayName: 'CONFIGURE with cmake'

  - script: |
      cd build;
      cmake --build . --target thymio-launcher --config Release -- -IPHONEOS_DEPLOYMENT_TARGET=11.0 CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO;
      xcodebuild -scheme thymio-launcher  -configuration Release -derivedDataPath ./bin/datas/libraries  -sdk iphoneos clean archive -archivePath ./bin/launcher.xcarchive -IPHONEOS_DEPLOYMENT_TARGET=11.0 -allowProvisioningUpdates CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO;
    displayName: 'Build with cmake - Unsigned'
    condition: eq(variables['Build.Reason'], 'PullRequest')

  - script:  |
      cd build;
      cmake --build . --target thymio-launcher --config Release -- -IPHONEOS_DEPLOYMENT_TARGET=11.0
      xcodebuild -scheme thymio-launcher  -configuration Release -derivedDataPath ./bin/datas/libraries  -sdk iphoneos clean archive -archivePath ./bin/launcher.xcarchive -IPHONEOS_DEPLOYMENT_TARGET=11.0 PROVISIONING_PROFILE_SPECIFIER="Ios-2020-dist" CODE_SIGN_IDENTITY="iPhone Distribution" CODE_SIGN_STYLE="Manual"
      xcodebuild -exportArchive -archivePath ./bin/launcher.xcarchive -exportOptionsPlist ../ios/exportOptions.plist -exportPath $(Build.ArtifactStagingDirectory)
    displayName: 'Build with cmake - SIGNED'
    condition: ne(variables['Build.Reason'], 'PullRequest')
   
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'ThymioSuite.app'