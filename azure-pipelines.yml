resources:
   containers:
   - container: fpkde
     options: '--privileged'
     image: mobsya/flatpak-builders:kde-latest

trigger:
  tags:
    include:
    - 2.*
  branches:
    include:
    - '*'

variables:
- group: passwords
- name: scratch_version
  value: "v20210324.3"
- name: packet_version
  value: "2.2.0"
- name: scratch_url
  value: "https://github.com/Mobsya/scratch-gui/releases/download/$(scratch_version)/scratch-gui.tar.gz"
- name: vpl3_url
  value: "https://github.com/Mobsya/ci-data/releases/download/data/vpl3-thymio-suite-android.tar.gz"
- name: vcpkg_commit
  value: "cccef600decd1091a20a0b4d8a2e61f7041eb686"
- name: visual_bootstrapper
  value: "https://github.com/Mobsya/ci-data/releases/download/data/vs_enterprise.exe"

parameters:
- name: 'architectures'
  type: object
  default: 
  - armeabi-v7a
  - arm64-v8a
  - x86
  - x86_64

jobs:
- job: 'BuildAndroid'
  pool:
    vmImage: 'Ubuntu-18.04'
  # strategy:
  #   matrix:
  #     armeabi:
  #       TARGET_ARCH: 'armeabi-v7a'
  #     aarch64:
  #       TARGET_ARCH: 'arm64-v8a'
  #     x86_64:
  #       TARGET_ARCH: 'x86_64'
  variables:
    - group: passport
    - name: API_LEVEL
      value: '24'
    - name: NDK_VERSION
      value: '21'
    - name: QT_VERSION
      value: '5.15.2'
    - name: CMAKE_VERSION
      value: '3.19.7'
    - name: BUILD_MULTI_DIR
  steps:
  - task: DownloadSecureFile@1
    name: keystore
    displayName: 'Download android keystore'
    inputs:
      secureFile: 'thymio_suite_mobile.p12'

  - script: |
      mv $(keystore.secureFilePath) .
    displayName: 'Move secure file'
    condition: ne(variables['Build.Reason'], 'PullRequest')

  - script: |
      docker pull mobsya/thymio-dev-env:android$API_LEVEL-ndk$NDK_VERSION-qt$QT_VERSION-cmake${CMAKE_VERSION}
    displayName: 'Pull docker image'

  - script: |
      git submodule update --init --recursive
    displayName: 'Clone submodules'
    
  - script: |
      wget -q $(scratch_url) && tar xzf scratch-gui.tar.gz -C .
      wget -q $(vpl3_url) && tar xzf vpl3-thymio-suite-android.tar.gz -C .
    displayName: 'Fetch VPL3 & Scratch'

  - script: |
      BUILD_MULTI_DIR=$(pwd)/build/Release/multi/android-${API_LEVEL}
      mkdir -p ${BUILD_MULTI_DIR}/android-build/assets ${BUILD_MULTI_DIR}/android-build/libs ${BUILD_MULTI_DIR}/aseba
      cp -R $(pwd)/vpl3-thymio-suite $(pwd)/scratch ${BUILD_MULTI_DIR}/android-build/assets
    displayName: 'Prepare CI environment'

  - ${{ each arch in parameters.architectures}}:
    - script: |
        build_dir=$(pwd)/build/Release/${{ arch }}/android-${API_LEVEL}
        mkdir -p ${build_dir}
        docker run --rm \
            -v $(pwd):/src:rw \
            -v ${build_dir}:/build:rw \
            mobsya/thymio-dev-env:android$API_LEVEL-ndk$NDK_VERSION-qt$QT_VERSION-cmake${CMAKE_VERSION} \
            "cmake -DANDROID_PLATFORM=android-${API_LEVEL} -DANDROID_ABI=${{ arch }} -DCMAKE_TOOLCHAIN_FILE=/android/ndk/android-ndk-r$NDK_VERSION/build/cmake/android.toolchain.cmake -DCMAKE_FIND_ROOT_PATH=/qt -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -GNinja -S /src -B /build && cd /build && ninja -j $(nproc)"

        sudo cp -r ${build_dir}/android-build/* ${BUILD_MULTI_DIR}/android-build/
        sudo cp -r ${build_dir}/aseba/* ${BUILD_MULTI_DIR}/aseba/
      displayName: 'Build ${{ arch }}'

  - script: |
      android_platform="--android-platform android-${API_LEVEL}"
      build_type_option="--release"
      sign_options="--sign thymio_suite_mobile.p12 thymio_suite_mobile --storepass $(keystore_pass)"
      docker run --rm \
        -v $(pwd):/src:rw \
        -v ${BUILD_MULTI_DIR}:/build:rw \
        mobsya/thymio-dev-env:${DEV_ENVIRONMENT_TAG} \
        "apt update && apt install -y jq && jq '.architectures = { \"arm64-v8a\":\"arm64-v8a\", \"armeabi-v7a\":\"armeabi-v7a\", \"x86\":\"x86\", \"x86_64\":\"x86_64\" }' /build/aseba/launcher/src/qtdeploy.json >> /build/aseba/launcher/src/qtdeploy.json.tmp && mv /build/aseba/launcher/src/qtdeploy.json.tmp /build/aseba/launcher/src/qtdeploy.json && /qt/bin/androiddeployqt --input /build/aseba/launcher/src/qtdeploy.json --output /build/android-build --gradle --aab ${build_type_option} ${android_platform} ${sign_options}"
      cp ${BUILD_MULTI_DIR}/android_build/build/outputs $(Build.ArtifactStagingDirectory)
    displayName: 'Package app'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'thymio-suite-android'
